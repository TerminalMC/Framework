plugins {
    id("multiloader-loader")
    id("fabric-loom")
}

dependencies {
    minecraft("com.mojang:minecraft:${minecraft_version}")
    mappings(loom.officialMojangMappings())

    include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:${mixinextras_version}")))

    modImplementation("net.fabricmc:fabric-loader:${fabric_loader_version}")
    modImplementation("net.fabricmc.fabric-api:fabric-api:${fabric_api_version}")

    modImplementation("maven.modrinth:mOgUt4GM:${modmenu_version_fabric}")
    modImplementation("me.shedaniel.cloth:cloth-config-fabric:${clothconfig_version_fabric}") {
        // Can't use Modrinth for this, not clear why.
        exclude(group: "net.fabricmc.fabric-api")
    }
    modImplementation("maven.modrinth:1eAoo2KR:${yacl_version_fabric}")
}

loom {
    def aw = project(":common").file("src/main/resources/${mod_id}.accesswidener")
    if (aw.exists()) accessWidenerPath.set(aw)
    mixin {
        defaultRefmapName.set("${mod_id}.refmap.json")
    }
    runs {
        client {
            client()
            setConfigName("Fabric Client")
            ideConfigGenerated(true)
            runDir("runs/client")
        }
        server {
            server()
            setConfigName("Fabric Server")
            ideConfigGenerated(true)
            runDir("runs/server")
        }
    }
}
